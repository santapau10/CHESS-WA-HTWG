# Stage 1: Build Vue app (Frontend)
FROM node:18 AS build

# Set working directory for Vue app
WORKDIR /app/frontend

# Copy package.json and package-lock.json for Vue app
COPY chess-app/package*.json ./

# Install Vue app dependencies
RUN npm install

# Copy the rest of the Vue app files
COPY chess-app/ ./

# Build the Vue app
RUN npm run build

# Stage 2: Set up Play Framework backend (using Java 19)
FROM openjdk:19-jdk-slim AS backend

# Set working directory for Play app
WORKDIR /app

# Copy the Play Framework distribution file (adjust path if needed)
COPY target/universal/play-scala-seed-1.0-SNAPSHOT.zip /app/

# Install unzip utility and unpack the distribution
RUN apt-get update && apt-get install -y unzip && \
    unzip play-scala-seed-1.0-SNAPSHOT.zip && \
    mv play-scala-seed-1.0-SNAPSHOT/* . && \
    rm -rf play-scala-seed-1.0-SNAPSHOT.zip play-scala-seed-1.0-SNAPSHOT

# Expose port 9000 for Play Framework app
EXPOSE 9000

# Stage 3: Final container with both Vue and Play Framework
FROM nginx:alpine

# Copy the build from the Vue app build stage to the Nginx server folder
COPY --from=build /app/frontend/dist /usr/share/nginx/html

# Expose the ports for Nginx frontend
EXPOSE 8080

# Final image for the Play backend (Java)
FROM openjdk:19-jdk-slim

# Set working directory for Play app
WORKDIR /app

# Copy the Play Framework app files from the backend stage
COPY --from=backend /app /app

# Expose Play Framework backend port
EXPOSE 9000

# Start the Play Framework application (using the script from bin/)
CMD ["bin/play-scala-seed", "-Dplay.http.secret.key=wOZy52FIaz2nWf2sguS5Nkw7KXmwDmbY0HACyHYz0wFWCW26odgAoBHMyqaveFzC", "-Dhttp.port=9000"]
